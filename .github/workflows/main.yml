# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
#on:
#   Triggers the workflow on push or pull request events but only for the "ci-tests-workflow" branch
#  push:
#    branches: [ "ci-tests-workflow" ]
#  pull_request:
#    branches: [ "ci-tests-workflow" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
#jobs:
  # This workflow contains a single job called "build"
#  build:
    # The type of runner that the job will run on
#    runs-on: ubuntu-latest

on:
   workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-20.04
#    env:
#      ROS_CI_DESKTOP: "`lsb_release -cs`"  # e.g. [trusty|xenial|...]
#      CI_SOURCE_PATH: $(pwd)
#      ROSINSTALL_FILE: $CI_SOURCE_PATH/dependencies.rosinstall
#      CATKIN_OPTIONS: $CI_SOURCE_PATH/catkin.options
#      ROS_PARALLEL_JOBS: '-j8 -l6'
#      # Set the python path manually to include /usr/-/python3/dist-packages
#      # as this is where apt-get installs python packages.
#      PYTHONPATH: $PYTHONPATH:/usr/lib/python3/dist-packages:/usr/local/lib/python3/dist-packages
#      ROS_DISTRO: noetic

    steps:
      - uses: ros-tooling/setup-ros@v0.3
        with:
          required-ros-distributions: noetic
      - uses: ros-tooling/action-ros-ci@v0.2
        with:
          target-ros1-distro: noetic

    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
#      - name: Run a one-line script
#        run: echo Hello, world!

      # Runs a set of commands using the runners shell
#      - name: Run a multi-line script
#        run: |
#          echo Add other actions to build,
#          echo test, and deploy your project.
