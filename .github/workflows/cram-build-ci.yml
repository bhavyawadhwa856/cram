name: ROS CI 20.04 | Build CRAM 

on:
   workflow_dispatch:
# on:
#    pull_request:
#     branches:
#       - noetic
#       - popcorn-noetic
  
jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      ROS_CI_DESKTOP: "`lsb_release -cs`"  # e.g. [trusty|xenial|...]
      ROSINSTALL_FILE: $CI_SOURCE_PATH/dependencies.rosinstall
      ROS_PARALLEL_JOBS: '-j8 -l6'
      # Set the python path manually to include /usr/-/python3/dist-packages
      # as this is where apt-get installs python packages.
      PYTHONPATH: $PYTHONPATH:/usr/lib/python3/dist-packages:/usr/local/lib/python3/dist-packages
      ROS_DISTRO: noetic
    steps:
#       - name: Set up OpenGL
#         uses: openrndr/setup-opengl@v1.1
#       - name: Check OpenGL
#         run: xvfb-run glxinfo
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: ./ros_ws/src/cram
      - name: Install ROS
        run: |
            sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $ROS_CI_DESKTOP main\" > /etc/apt/sources.list.d/ros-latest.list"
            sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
            sudo apt-get update -qq
            sudo apt-get install dpkg
            sudo apt-get install -y python3-catkin-tools python3-catkin-pkg
            sudo apt-get install -y python3-rosdep python3-wstool
            sudo apt-get install -y libboost-dev
            sudo apt-get install -y libyaml-cpp-dev
            sudo apt-get install -y ros-cmake-modules
            sudo apt-get install -y ros-$ROS_DISTRO-nodelet-core
            sudo apt-get install -y ros-$ROS_DISTRO-roscpp
            sudo apt-get install -y ros-$ROS_DISTRO-roslint
            sudo apt-get install -y ros-$ROS_DISTRO-std-msgs
            sudo apt-get install -y ros-$ROS_DISTRO-roslisp-repl
            sudo apt-get install -y ros-$ROS_DISTRO-rosbash
            sudo apt-get install -y ros-$ROS_DISTRO-roslaunch
            sudo apt-get install -y libassimp-dev
            sudo apt-get install -y libbullet-dev 
            sudo apt-get install -y tree
            source /opt/ros/$ROS_DISTRO/setup.bash
            # Prepare rosdep to install dependencies.
            sudo rosdep init
            rosdep update --include-eol-distros  # Support EOL distros.
      - name: Construct Workspace and resources
        run: |
          source /opt/ros/$ROS_DISTRO/setup.bash
          mkdir -p $GITHUB_WORKSPACE/ros_ws/src/cram
          cd $GITHUB_WORKSPACE
          # ls -A | grep -v ros_ws | xargs mv -t $GITHUB_WORKSPACE/ros_ws/src/cram/ > /dev/null # move the repo into the workspace
          # mv $GITHUB_WORKSPACE/cram $GITHUB_WORKSPACE/ros_ws/src/
          cd $GITHUB_WORKSPACE/ros_ws/src
          wstool init
          wstool merge $GITHUB_WORKSPACE/ros_ws/src/cram/cram-20.04-http.rosinstall
          wstool remove cram
          wstool up
      - name: Rosdep install dependencies
        run: |
          cd $GITHUB_WORKSPACE/ros_ws/
          source /opt/ros/$ROS_DISTRO/setup.bash
          rosdep install -y --ignore-src --from-paths src/ -r
      - name: Build Workspace
        run: |
          cd $GITHUB_WORKSPACE/ros_ws/
          source /opt/ros/$ROS_DISTRO/setup.bash
          catkin build $ROS_PARALLEL_JOBS
      - name: Run Tests
        run: |
          cd $GITHUB_WORKSPACE/ros_ws/
          source devel/setup.bash
          export DISPLAY=:0 xvfb-run -s '-screen 0 1024x768x24'
          rosrun cram_tests test.sh
